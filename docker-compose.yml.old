

version: '3'

services:

  app:
    build: app/
    # volumes:
    #   - ./app/:/app

    #  In YAML files, you should not include spaces around the equal sign (=) when defining environment variables.
    environment:
      - MYSQL_HOST=127.0.0.1
      - MYSQL_PORT=3306
      - MYSQL_USER=u0156635
      - MYSQL_PASSWORD=22tritionouP
      - MYSQL_DATABASE=microbetagDB

  nginx: 
    image: nginx:alpine
    ports: 
      - 443:443
      - 8080:8080
    volumes: 
      - ./certs/domain.crt:/etc/nginx/certs/certificate.crt
      - ./certs/new_domain.key:/etc/nginx/certs/certificate.key
      - ./certs/domain.csr:/etc/nginx/certs/certificate.csr
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf






# services:
#   app: 

#     # image: mysql:5.7
#     build: app


#     # flask requires SIGINT to stop gracefully
#     # (default stop signal from Compose is SIGTERM)
#     stop_signal: SIGINT
#     ports:
#       - '8000:8000'

#     environment:
#       MYSQL_HOST: mysql
#       # MYSQL_USER: u0156635
#       MYSQL_ROOT_PASSWORD: 22tritionouP
#       MYSQL_DB: microbetagDB

#     # SYNTAX FOR VOLUME! 
#     # volumes:
#     #   - "./app/:/app/:rw"
#       # - "/var/lib/mysql/:/var/lib/mysql"


# # mysql --database microbetagDB  -h 127.0.0.1 -u u0156635  -p 



# services:

#   app:
#     # image: node:20-alpine
#     build: app
#       # context: app/
#       # target: builder    
#     # command: sh -c "cd app && yarn install && yarn run dev"
#     ports:
#       - 3000:3000
#     # working_dir: /app
#     volumes:
#       - ./:/app
#     environment:
#       MYSQL_HOST: mysql
#       MYSQL_USER: root
#       MYSQL_PASSWORD: 22tritionouP
#       MYSQL_DB: microbetagDB

#   mysql:
#     image: mysql:5.7
#     volumes:
#       - todo-mysql-data:/var/lib/mysql
#     environment: 
#       MYSQL_ROOT_PASSWORD: 22tritionouP
#       MYSQL_DATABASE: microbetagDB

# volumes:
#   todo-mysql-data:



  # db:
  #   image: mariadb:10-focal
  #   command: '--default-authentication-plugin=mysql_native_password'
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
  #     interval: 3s
  #     retries: 5
  #     start_period: 30s
  #   secrets:
  #     - db-password
  #   volumes:
  #     - db-data:/var/lib/mysql
  #   networks:
  #     - backnet
  #   environment:
  #     - MYSQL_DATABASE=example
  #     - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
  #     - MYSQL_USER
  #   # environment:
  #   #   MYSQL_HOST: mysql
  #   #   MYSQL_USER: root
  #   #   MYSQL_PASSWORD: <your-password>
  #   #   MYSQL_DB: todos

  #   expose:
  #     - 3306
  #     - 33060







    # nginx: 
    #     image: nginx:alpine
    #     ports: 
    #         - 443:443
    #     volumes: 
    #         - ./certs/domain.crt:/etc/nginx/certs/certificate.crt
    #         - ./certs/new_domain.key:/etc/nginx/certs/certificate.key
    #         - ./certs/domain.csr:/etc/nginx/certs/certificate.csr
    #         - ./conf/ngingx.conf:/etc/nginx/conf.d/default.conf

